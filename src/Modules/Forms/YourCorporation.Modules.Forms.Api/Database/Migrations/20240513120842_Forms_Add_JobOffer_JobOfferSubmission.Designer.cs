// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YourCorporation.Modules.Forms.Api.Database;

#nullable disable

namespace YourCorporation.Modules.Forms.Api.Database.Migrations
{
    [DbContext(typeof(FormsDbContext))]
    [Migration("20240513120842_Forms_Add_JobOffer_JobOfferSubmission")]
    partial class Forms_Add_JobOffer_JobOfferSubmission
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("forms")
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YourCorporation.Modules.Forms.Api.Entities.FormSubmissions.EventSubmissions.EventSubmission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("EventFormId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("EventFormId");

                    b.ToTable("EventSubmissions", "forms");
                });

            modelBuilder.Entity("YourCorporation.Modules.Forms.Api.Entities.FormSubmissions.JobOfferSubmissions.JobOfferSubmission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("JobOfferFormId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("JobOfferFormId");

                    b.ToTable("JobOfferSubmissions", "forms");
                });

            modelBuilder.Entity("YourCorporation.Modules.Forms.Api.Entities.Forms.EventForms.EventForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EventName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsUniqueSubmission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasMaxLength(108)
                        .HasColumnType("nvarchar(108)");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("EventForms", "forms");
                });

            modelBuilder.Entity("YourCorporation.Modules.Forms.Api.Entities.Forms.JobOfferForms.JobOfferForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsUniqueSubmission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("JobOfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(108)
                        .HasColumnType("nvarchar(108)");

                    b.HasKey("Id");

                    b.HasIndex("JobOfferId")
                        .IsUnique();

                    b.ToTable("JobOfferForms", "forms");
                });

            modelBuilder.Entity("YourCorporation.Modules.Forms.Api.Entities.FormSubmissions.EventSubmissions.EventSubmission", b =>
                {
                    b.HasOne("YourCorporation.Modules.Forms.Api.Entities.Forms.EventForms.EventForm", "EventForm")
                        .WithMany("Submissions")
                        .HasForeignKey("EventFormId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EventForm");
                });

            modelBuilder.Entity("YourCorporation.Modules.Forms.Api.Entities.FormSubmissions.JobOfferSubmissions.JobOfferSubmission", b =>
                {
                    b.HasOne("YourCorporation.Modules.Forms.Api.Entities.Forms.JobOfferForms.JobOfferForm", "JobOfferForm")
                        .WithMany("Submission")
                        .HasForeignKey("JobOfferFormId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("JobOfferForm");
                });

            modelBuilder.Entity("YourCorporation.Modules.Forms.Api.Entities.Forms.EventForms.EventForm", b =>
                {
                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("YourCorporation.Modules.Forms.Api.Entities.Forms.JobOfferForms.JobOfferForm", b =>
                {
                    b.Navigation("Submission");
                });
#pragma warning restore 612, 618
        }
    }
}
